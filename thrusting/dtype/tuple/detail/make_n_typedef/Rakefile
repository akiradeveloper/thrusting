require "rake/clean"

["template_type", "tuple_min_max", "value_type"].each do |s|
  require "thrusting/rb/#{s}"
end

def line(i, type, tuple_type)
"""
__host__ __device__
typename thrusting::tuple#{i}<#{type}>::type make_#{tuple_type}#{i}(#{explicit_type_arg(type, 0...i)}){
  return thrusting::make_tuple#{i}<#{type}>(#{arg(0...i)});
}
"""
end

def all(type, tuple_type)
  code = (TUPLE_MIN..TUPLE_MAX).map do |i|
    line(i, type, tuple_type)
  end.join
"""
#pragma once
#include <thrusting/tuple.h>
namespace thrusting {
#{code}
}
"""
end

task :build do
  TYPES.zip(TUPLE_TYPES).map do |type, tuple_type|
    f = File.open("#{tuple_type}.h", "w")
    f.puts(all(type, tuple_type))
    f.close
  end
end

CLOBBER.include(TUPLE_TYPES.map { |tuple_type| "#{tuple_type}.h" })
