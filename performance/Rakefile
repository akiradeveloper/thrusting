require "rake/clean"

require "thrusting/build"

include Thrusting
cc = make_default_compiler.append(DEFAULT_OPTIMIZE_FLAG)

figdir = Thrusting.get_figure_dir(File.dirname __FILE__)
FileUtils.mkdir_p(figdir)

NS = Thrusting.make_xs([1,2,5], [100, 1000])
MS = Thrusting.make_xs([1,2,5], [100, 1000])

["thrust_scatter", "thrusting_scatter", "thrust_gather", "thrusting_gather"].each do |dir|
  cc.make_compile_task(dir)
  make_run_task_1(NS, dir)
end

["reduce_by_bucket"].each do |dir|
  make_compile_task(dir)
  make_run_task_2(NS, MS, dir)
end

namespace :plot do
  task :scatter do
    Gnuplot.open do |gp|
      Gnuplot::Plot.new(gp) do |plot|
        plot.title("comparing scatter")
        plot.xlabel "n"
        plot.ylabel "time [ms]"
        plot.terminal("jpeg")
        plot.output("#{figdir}/scatter_comparison.jpeg")
        
        ["thrusting_scatter", "thrust_scatter"].each do |dir|
          Thrusting.make_xs_plot(plot, NS, dir)
        end
      end
    end
  end
  task :gather do
    Gnuplot.open do |gp|
      Gnuplot::Plot.new(gp) do |plot|
        plot.title("comparing gather")
        plot.xlabel "n"
        plot.ylabel "time [ms]"
        plot.terminal("jpeg")
        plot.output("#{figdir}/gather_comparison.jpeg")
        
        ["thrusting_gather", "thrust_gather"].each do |dir|
          Thrusting.make_xs_plot(plot, NS, dir)
        end
      end
    end
  end
  # M = const
  task :reduce_by_bucket do
    Gnuplot.open do |gp|
      Gnuplot::Plot.new(gp) do |plot|
        M_CONST = 100
        plot.title("reduce_by_bucket on M #{M_CONST} const")
        plot.xlabel "m"
        plot.ylabel "time [ms]"
        plot.terminal("jpeg")
        plot.output("#{figdir}/reduce_by_bucket_mconst.jpeg")

        Thrusting.make_xs_y_plot(plot, NS, M_CONST, "reduce_by_bucket");
      end
    end
  end
  # N = const
  task :reduce_by_bucket do
    Gnuplot.open do |gp|
      Gnuplot::Plot.new(gp) do |plot|
        N_CONST = 100
        plot.title("reduce_by_bucket on N #{N_CONST} const")
        plot.xlabel "m"
        plot.ylabel "time [ms]"
        plot.terminal("jpeg")
        plot.output("#{figdir}/reduce_by_bucket_nconst.jpeg")

        Thrusting.make_x_ys_plot(plot, N_CONST, MS, "reduce_by_bucket")
      end
    end
  end
  task :reduce_by_bucket do
    Gnuplot.open do |gp|
      Gnuplot::SPlot.new(gp) do |plot|
        plot.title "reduce_by_bucket performance"
        plot.xlabel "n"
        plot.ylabel "m"
        # plot.zlabel "time"
        plot.terminal "jpeg"
        plot.output "#{figdir}/reduce_by_bucket_performance.jpeg"
       
        Thrusting.make_xs_ys_plot(plot, NS, MS, "reduce_by_bucket")
      end
    end
  end
end

namespace :plot do
  desc "generate figure"
  task :all => [:scatter, :gather, :reduce_by_bucket]
end
